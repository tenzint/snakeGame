var M=Object.defineProperty;var T=(l,a,r)=>a in l?M(l,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):l[a]=r;var o=(l,a,r)=>(T(l,typeof a!="symbol"?a+"":a,r),r);import{d as g,r as f,o as R,a as w,c as b,b as c,t as k,u as v,F as I,p,e as E,f as F,g as H,h as L}from"./vendor.55611bcf.js";const A=function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))d(s);new MutationObserver(s=>{for(const h of s)if(h.type==="childList")for(const u of h.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&d(u)}).observe(document,{childList:!0,subtree:!0});function r(s){const h={};return s.integrity&&(h.integrity=s.integrity),s.referrerpolicy&&(h.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?h.credentials="include":s.crossorigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function d(s){if(s.ep)return;s.ep=!0;const h=r(s);fetch(s.href,h)}};A();var B=(l,a)=>{const r=l.__vccOpts||l;for(const[d,s]of a)r[d]=s;return r};const m=l=>(p("data-v-62905b47"),l=l(),E(),l),z={class:"title-big"},O=m(()=>c("h1",{class:"title"},"Snake Game",-1)),N=m(()=>c("span",{class:"title-left howto"},"How to play",-1)),W={class:"title-small"},q={class:"title-item"},D={class:"title-item"},G=g({setup(l){let a=f(null),r=f(null),d=f(null),s=f(""),h,u=f(0),y=f(0);class S{constructor(t=20,i=window.innerWidth/20,e=window.innerHeight/20){o(this,"cRef");o(this,"ctx");o(this,"unit");o(this,"width");o(this,"height");o(this,"canvasColor");o(this,"color2");o(this,"snakeColor");o(this,"foodColor");o(this,"snake");o(this,"velocity");o(this,"timer");o(this,"food");o(this,"score");o(this,"playingMode");h=this,this.cRef=a.value,this.ctx=null,this.unit=t,this.width=i,this.height=e,this.canvasColor="rgba(128, 128, 128, 0.3)",this.color2="rgba(128, 128, 128, 0.5)",this.snakeColor="#1B5E20",this.foodColor="#ff0000",this.snake=[],this.velocity={x:1,y:0},this.timer=0,this.food={x:Math.random()*this.width,y:Math.random()*this.height},this.score=0,this.playingMode=!1,s.value="Pause"}setup(){return new Promise((t,i)=>{window.innerWidth>=1080?this.unit=40:window.innerWidth>=720?this.unit=30:this.unit=20,d.value.style.height=window.innerHeight-r.value.offsetHeight+"px";let e=1;return window.innerWidth>=600&&(e=.8),this.cRef.width=Math.floor(window.innerWidth*e/this.unit)*this.unit,this.cRef.height=Math.floor((window.innerHeight-r.value.offsetHeight-10)/this.unit)*this.unit,this.width=Math.floor(this.cRef.width/this.unit),this.height=Math.floor(this.cRef.height/this.unit),t()})}async restart(){y.value<u.value&&(y.value=u.value),this.cleanTimer(),this.playingMode=!1,s.value="Pause",await this.start()}async start(){await this.setup();let t=Math.floor(this.width/2),i=Math.floor(this.height/2);this.snake=[],this.velocity={x:1,y:0},this.food={x:Math.random()*this.width,y:Math.random()*this.height},this.snake.push({x:t,y:i}),this.snake.push({x:t-1,y:i}),this.snake.push({x:t-2,y:i}),this.snake.push({x:t-3,y:i}),this.updateScore(),this.randomizeFood(),this.draw()}cleanTimer(){clearInterval(this.timer)}togglePausePlay(){this.timer&&this.cleanTimer(),this.playingMode?(this.playingMode=!1,s.value="Pause"):(this.playingMode=!0,s.value="Play",this.timer=setInterval(()=>this.moveNext(),100))}updateScore(){this.score=this.snake.length*10-40,u.value=this.score}didSnakeEat(){return this.snake[0].x===this.food.x&&this.snake[0].y===this.food.y?(this.randomizeFood(),this.updateScore(),!0):!1}checkForMistakes(){if(this.snake[0].x<0||this.snake[0].x>=this.width||this.snake[0].y<0||this.snake[0].y>=this.height){this.restart();return}this.snake.forEach(t=>{if(this.snake[0]!==t&&this.snake[0].x===t.x&&this.snake[0].y===t.y){this.restart();return}})}moveNext(){let t={x:this.snake[0].x,y:this.snake[0].y};t.x+=this.velocity.x,t.y+=this.velocity.y,this.snake.unshift(t),this.checkForMistakes(),this.didSnakeEat()||this.snake.pop(),this.draw()}moveLeft(){this.snake[0].x-this.snake[1].x==0&&(this.velocity={x:-1,y:0})}moveRight(){this.snake[0].x-this.snake[1].x==0&&(this.velocity={x:1,y:0})}moveUp(){this.snake[0].y-this.snake[1].y==0&&(this.velocity={x:0,y:-1})}moveDown(){this.snake[0].y-this.snake[1].y==0&&(this.velocity={x:0,y:1})}randomizeFood(){this.food={x:Math.floor(Math.random()*this.width),y:Math.floor(Math.random()*this.height)},this.snake.forEach(t=>{t.x===this.food.x&&t.y===this.food.y&&this.randomizeFood()})}draw(){var t;this.ctx=this.cRef.getContext("2d"),(t=this.ctx)==null||t.clearRect(0,0,this.width*this.unit,this.height*this.unit),this.ctx.fillStyle=this.color2,this.ctx.fillRect(0,0,this.width*this.unit,this.height*this.unit),this.ctx.fillStyle=this.canvasColor;for(let i=0;i<this.width;i+=1)for(let e=0;e<this.height;e+=1)(i%2==0&&e%2==1||i%2==1&&e%2==0)&&this.ctx.fillRect(i*this.unit,e*this.unit,this.unit,this.unit);this.drawSnake(),this.drawFood()}drawSnake(){this.ctx.beginPath(),this.ctx.fillStyle=this.snakeColor;let t={x:0,y:0},i={x:0,y:0};this.snake.forEach((e,n)=>{n===0?(t.x=this.velocity.x,t.y=this.velocity.y,this.drawSnakeHead(e,t)):n===this.snake.length-1?(t.x=this.snake[n-1].x-this.snake[n].x,t.y=this.snake[n-1].y-this.snake[n].y,this.drawSnakeTail(e,t)):(t.x=this.snake[n-1].x-this.snake[n].x,t.y=this.snake[n-1].y-this.snake[n].y,i.x=this.snake[n].x-this.snake[n+1].x,i.y=this.snake[n].y-this.snake[n+1].y,i.x===t.x&&t.y===i.y?this.drawSnakeBody(e,t):this.drawCurvedSnake(e,t,i))}),this.ctx.closePath()}rotateSnakePart(t,i){this.ctx.translate((t.x+.5)*this.unit,(t.y+.5)*this.unit);let e=0;i.x===1&&i.y===0?e=0:i.x===-1&&i.y===0?e=Math.PI:i.x===0&&i.y===1?e=Math.PI*.5:i.x===0&&i.y===-1&&(e=Math.PI*1.5),this.ctx.rotate(e),this.ctx.translate(-1*(t.x+.5)*this.unit,-1*(t.y+.5)*this.unit)}drawSnakeHead(t,i){this.ctx.save(),this.rotateSnakePart(t,i),this.ctx.fillStyle=this.snakeColor,this.ctx.beginPath(),this.ctx.moveTo(t.x*this.unit,(t.y+.2)*this.unit),this.ctx.lineTo((t.x+.2)*this.unit,t.y*this.unit),this.ctx.lineTo((t.x+1)*this.unit,(t.y+.3)*this.unit),this.ctx.lineTo((t.x+1)*this.unit,(t.y+.7)*this.unit),this.ctx.lineTo((t.x+.2)*this.unit,(t.y+1)*this.unit),this.ctx.lineTo(t.x*this.unit,(t.y+.8)*this.unit),this.ctx.closePath(),this.ctx.fill(),this.ctx.fillStyle="#777700",this.ctx.beginPath(),this.ctx.arc((t.x+.7)*this.unit,(t.y+.3)*this.unit,this.unit*.15,0,2*Math.PI),this.ctx.arc((t.x+.7)*this.unit,(t.y+.7)*this.unit,this.unit*.15,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}drawSnakeTail(t,i){this.ctx.save(),this.rotateSnakePart(t,i),this.ctx.fillStyle=this.snakeColor,this.ctx.beginPath(),this.ctx.moveTo(t.x*this.unit,(t.y+.5)*this.unit),this.ctx.lineTo((t.x+1)*this.unit,(t.y+.2)*this.unit),this.ctx.lineTo((t.x+1)*this.unit,(t.y+.8)*this.unit),this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()}drawCurvedSnake(t,i,e){let n=!0;e.x===1&&i.y===-1||e.x===-1&&i.y===1||e.y===1&&i.x===1||e.y===-1&&i.x===-1?n=!0:n=!1,this.ctx.save(),this.rotateSnakePart(t,e),this.ctx.fillStyle=this.snakeColor,this.ctx.beginPath(),n?(this.ctx.moveTo(t.x*this.unit,(t.y+.2)*this.unit),this.ctx.quadraticCurveTo((t.x+.5)*this.unit,(t.y+.5)*this.unit,(t.x+.2)*this.unit,t.y*this.unit),this.ctx.lineTo((t.x+.8)*this.unit,t.y*this.unit),this.ctx.quadraticCurveTo((t.x+1)*this.unit,(t.y+1)*this.unit,t.x*this.unit,(t.y+.8)*this.unit)):(this.ctx.moveTo(t.x*this.unit,(t.y+.8)*this.unit),this.ctx.quadraticCurveTo((t.x+.5)*this.unit,(t.y+.5)*this.unit,(t.x+.2)*this.unit,(t.y+1)*this.unit),this.ctx.lineTo((t.x+.8)*this.unit,(t.y+1)*this.unit),this.ctx.quadraticCurveTo((t.x+1)*this.unit,t.y*this.unit,t.x*this.unit,(t.y+.2)*this.unit)),this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()}drawSnakeBody(t,i){this.ctx.save(),this.rotateSnakePart(t,i),this.ctx.fillStyle=this.snakeColor,this.ctx.beginPath(),this.ctx.moveTo(t.x*this.unit,(t.y+.2)*this.unit),this.ctx.bezierCurveTo((t.x+.3)*this.unit,(t.y+.4)*this.unit,(t.x+.6)*this.unit,(t.y-.1)*this.unit,(t.x+1)*this.unit,(t.y+.2)*this.unit),this.ctx.lineTo((t.x+1)*this.unit,(t.y+.8)*this.unit),this.ctx.bezierCurveTo((t.x+.6)*this.unit,(t.y+.6)*this.unit,(t.x+.3)*this.unit,(t.y+1)*this.unit,t.x*this.unit,(t.y+.8)*this.unit),this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()}drawFood(){this.ctx.globalAlpha=.8;let t=this.ctx.createRadialGradient((this.food.x+.4)*this.unit,(this.food.y+.4)*this.unit,0,(this.food.x+.5)*this.unit,(this.food.y+.5)*this.unit,this.unit);t.addColorStop(0,"#aaaa00"),t.addColorStop(.1,"#999922"),t.addColorStop(.1,"#777733"),t.addColorStop(.2,"#441505"),t.addColorStop(.4,"#880101"),t.addColorStop(.9,"#cc0000"),t.addColorStop(1,this.foodColor),this.ctx.fillStyle=t,this.ctx.beginPath(),this.ctx.arc((this.food.x+.5)*this.unit,(this.food.y+.5)*this.unit,this.unit*.3,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill()}arrowPressed(t){t.code==="KeyP"&&h.togglePausePlay(),h.playingMode&&(t.code==="ArrowUp"?h.moveUp():t.code==="ArrowDown"?h.moveDown():t.code==="ArrowLeft"?h.moveLeft():t.code==="ArrowRight"&&h.moveRight())}}let x;R(()=>{x=new S,document.addEventListener("keydown",x.arrowPressed),x.start().then(()=>{x.start()}),u.value=x.score});const P=()=>x.togglePausePlay();return(C,t)=>(w(),b(I,null,[c("div",{class:"title-container",ref_key:"titleRef",ref:r},[c("div",z,[O,N,c("button",{class:"button title-left",onClick:P},k(v(s)),1)]),c("div",W,[c("span",q,"SCORE: "+k(v(u)),1),c("span",D,"HIGH SCORE: "+k(v(y)),1)])],512),c("div",{class:"container",ref_key:"containerRef",ref:d},[c("canvas",{id:"snakeCanvas",ref_key:"canvasRef",ref:a},null,512)],512)],64))}});var U=B(G,[["__scopeId","data-v-62905b47"]]);const j=g({setup(l){return(a,r)=>(w(),F(U))}}),_=H(j);_.use(L);_.mount("#app");
